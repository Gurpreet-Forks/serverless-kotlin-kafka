spring.main.web-application-type=none

# kafka application config
serverless.kotlin.kafka.so-to-ws.url=wss://stackoverflow-to-ws-x5ht4amjia-uc.a.run.app/questions
serverless.kotlin.kafka.mytopic.name=mytopic
serverless.kotlin.kafka.mytopic.replicas=1
serverless.kotlin.kafka.mytopic.partitions=8

# kafka producer config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer

# kafka connection config
spring.kafka.properties.ssl.endpoint.identification.algorithm=https
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_USERNAME}' password='${KAFKA_PASSWORD}';
spring.kafka.properties.security.protocol=SASL_SSL

# schema registry config
spring.kafka.properties.basic.auth.credentials.source=USER_INFO
spring.kafka.properties.schema.registry.basic.auth.user.info=${SCHEMA_REGISTRY_KEY}:${SCHEMA_REGISTRY_PASSWORD}
spring.kafka.properties.schema.registry.url=${SCHEMA_REGISTRY_URL}

#spring.kafka.producer.properties.json.oneof.for.nullables=false
#spring.kafka.producer.properties.json.schema.spec.version=draft_7

